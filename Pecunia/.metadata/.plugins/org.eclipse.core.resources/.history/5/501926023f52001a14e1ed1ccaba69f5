package com.capgemini.pecunia.DAOTest;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.Test;

import com.capgemini.pecunia.DAO.PassbookMaintenanceDaoImpl;
import com.capgemini.pecunia.DTO.Transaction;
import com.capgemini.pecunia.exceptions.AccountNumberValidation;

public class PassbookMaintenanceDaoImplTest {
	
	@Test
	public void testAccountVerificationDao() throws AccountNumberValidation
	{
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		boolean result=accountObj.accountValidation("20424444083");
		assertTrue(result);
	}
	@Test
	public void accountVerificationDaoTest() throws AccountNumberValidation {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		boolean result=accountObj.accountValidation("20424444080");
		assertTrue(result);
	}
	
	@Test
	public void testUpdatePassBook()
	{
		
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		
		Object[] result=(accountObj.transactions("20424444085")).toArray();
		Object[] expected=new Object[1];
		
		Transaction obj=new Transaction();
		obj.setAccountNumber(20424444085L);
		obj.setMoney(1200);
		obj.setDate(LocalDate.parse("2019-05-14"));
		expected [0]= obj;
		assertArrayEquals(expected,result);
		
	}
	
	@Test
	public void passbook() {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
	Object[] result=	(accountObj.updatePassbook("20424444085")).toArray();
	Object[] expected=new Object[1];
	Transaction obj=new Transaction();
	obj.setAccountNumber(20424444085L);
	obj.setMoney(1200);
	obj.setDate(LocalDate.parse("2019-05-14"));
	expected [0]= obj;
	assertArrayEquals(expected,result);
	}
	
	@Test
	void checkAccountNumberLength() {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		
		assertThrows(AccountNumberValidation.class,()->accountObj.accountValidation("1239874563"));
		
	}
	
	@Test
	void checkAccountNumberFormet() {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		
		assertThrows(AccountNumberValidation.class,()->accountObj.accountValidation("1239874h63"));
		
	}
	
	@Test
	void testAccountSummary() {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		assertThrows(AccountNumberValidation.class,()->accountObj.accountSummary("20424444085", LocalDate.parse("2020-01-14"), LocalDate.parse("2019-05-14")));
	}

	@Test
	void testDateAccountSummary() {
		PassbookMaintenanceDaoImpl accountObj=new PassbookMaintenanceDaoImpl();
		assertThrows(AccountNumberValidation.class,()->accountObj.accountSummary("20424444085", LocalDate.parse("2019-05-14"), LocalDate.parse("2020-05-14")));
	}
}
